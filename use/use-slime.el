;;; use/use-slime.el -*- lexical-binding: t; -*-

(use-package! slime
  :ensure t ; Ensures the SLIME package is available via package archives.
  :commands (slime slime-connect) ; Make SLIME commands autoload.
  :init
  ;; Load the helper file generated by (quicklisp-slime-helper:install)
  ;; This file typically sets up inferior-lisp-program and other essentials
  ;; to connect SLIME with your Quicklisp-enabled Lisp.
  (let ((slime-helper-file (expand-file-name "~/quicklisp/slime-helper.el")))
    (when (file-exists-p slime-helper-file)
      (load slime-helper-file nil t)))

  ;; As a fallback or if slime-helper.el doesn't set it, define the Lisp program.
  ;; quicklisp-slime-helper usually makes this more specific.
  (unless (boundp 'inferior-lisp-program) ; Only set if not already set by slime-helper
    (setq inferior-lisp-program "sbcl"))

  :config
  ;; Standard SLIME setup.
  ;; slime-fancy enables many useful features (indentation, xref, etc.).
  ;; slime-quicklisp provides commands like M-x slime-ql-complete.
  ;; slime-asdf provides ASDF integration (e.g., C-c C-k to compile file and load system).
  (slime-setup '(slime-fancy slime-quicklisp slime-asdf))

  ;; Use fuzzy completion, which is often preferred.
  (setq slime-complete-symbol-function 'slime-fuzzy-complete-symbol)

  ;; Set coding system for SLIME communication (UTF-8 is a good default).
  (setq slime-net-coding-system 'utf-8-unix))
